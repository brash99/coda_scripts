#!/bin/bash
#
# startCoda example script
#
PLATFORM_XPOS=40

PEB_XPOS=$((PLATFORM_XPOS + 800))
ROC_XPOS=$((PEB_XPOS + 800))

PEB_YPOS=40
ROC_YPOS=$((PEB_YPOS))

PEB_YPOS_INCR=400
ROC_YPOS_INCR=400

. coda_conf_functions

# CODA 3 platform needs JAVA_HOME and COOL_HOME defined
if [ -z $JAVA_HOME ]; then
    echo "ERROR: \$JAVA_HOME not defined!"
    exit 1
fi
if [ -z $COOL_HOME ]; then
    echo "ERROR: \$COOL_HOME not defined!"
    exit 1
fi


# Check for previous startCoda remnants
pidlist=`pgrep -U $UID platform; pgrep -U $UID rcgui; pgrep -U $UID coda_emu_peb`

if [[ "$pidlist" != "" ]] ; then
   echo $pidlist
    echo "coda is already running, are you sure you want to start a new coda? this will kill the previous process."
    read -p "Input Y or y to start a new coda:  " choice
    echo $choice
    if [ "$choice" != "y" -a "$choice" != "Y" ] ; then
	exit
    fi
fi

# Kill all previous startCoda remnants
kcoda


# Launch the platform in its own xterm
#echo "Starting platform"
#xterm -geometry 80x5+${PLATFORM_XPOS}+0 -T "platform" -bg "red" \
#      -e /bin/bash -c "platform" &
#sleep 8

# Launch the rcgui
echo "Starting rcgui"
rcgui &

set_xterm_title_cmd() {
    local hostname=$1
    local component=$2
    local name=$3
    local option=

    codaconf_get_name_option $hostname $name
    option=$CODA_COMPONENT_OPTION

    XTERM_TITLE="$hostname : $component: $name"

    case "$component" in
	"ROC" )
	    XTERM_COLOR="green"
	    XTERM_CMD="remote_vme $hostname nobody startROC.sh $name $option"
	    ;;
	"TS" )
	    XTERM_COLOR="yellow"
	    XTERM_CMD="remote_vme $hostname nobody startTS.sh $name $option"
	    ;;
	"FPGA" )
	    XTERM_COLOR="green"
	    XTERM_CMD="remote_vme $hostname nobody startFPGA.sh $name $option"
	    ;;
	"PEB" )
	    XTERM_COLOR="lightblue"
	    XTERM_CMD="remote_vme $hostname sbs-onl bash -l startPEB.sh $name"
	    ;;
    esac

}

# Launch the PEBs
coda_conf_get_component_list PEB
if [ $? == 1 ] ; then
    PEB_hosts=${CODA_HOSTNAME_LIST[@]}

    for host in $PEB_hosts
    do
	codaconf_get_component_name $host PEB
	set_xterm_title_cmd $host PEB $CODA_COMPONENT_NAME
	xterm -geometry 80x25+${PEB_XPOS}+${PEB_YPOS} -T "$XTERM_TITLE" -bg "$XTERM_COLOR" \
	      -e /bin/bash -c "$XTERM_CMD" &
	(( PEB_YPOS += PEB_YPOS_INCR ))
    done
fi

# Launch the ROCs
coda_conf_get_component_list ROC
if [ $? == 1 ] ; then
    ROC_hosts=${CODA_HOSTNAME_LIST[@]}

    for host in $ROC_hosts
    do
	codaconf_get_component_name $host ROC
	set_xterm_title_cmd $host ROC $CODA_COMPONENT_NAME
	xterm -geometry 80x25+${ROC_XPOS}+${ROC_YPOS} -T "$XTERM_TITLE" -bg "$XTERM_COLOR" \
	      -e /bin/bash -c "$XTERM_CMD" &
	(( ROC_YPOS += ROC_YPOS_INCR ))
    done
fi

# Launch the FPGAs
coda_conf_get_component_list FPGA
if [ $? == 1 ] ; then

    ROC_hosts=${CODA_HOSTNAME_LIST[@]}

    for host in $ROC_hosts
    do
	codaconf_get_component_name $host FPGA
	set_xterm_title_cmd $host FPGA $CODA_COMPONENT_NAME
	xterm -geometry 80x25+${ROC_XPOS}+${ROC_YPOS} -T "$XTERM_TITLE" -bg "$XTERM_COLOR" \
	      -e /bin/bash -c "$XTERM_CMD" &
	(( ROC_YPOS += ROC_YPOS_INCR ))
    done

fi

# Launch the TSs
coda_conf_get_component_list TS
if [ $? == 1 ] ; then

    ROC_hosts=${CODA_HOSTNAME_LIST[@]}

    for host in $ROC_hosts
    do
	codaconf_get_component_name $host TS
	set_xterm_title_cmd $host TS $CODA_COMPONENT_NAME
	xterm -geometry 80x25+${ROC_XPOS}+${ROC_YPOS} -T "$XTERM_TITLE" -bg "$XTERM_COLOR" \
	      -e /bin/bash -c "$XTERM_CMD" &
	(( ROC_YPOS += ROC_YPOS_INCR ))
    done

fi
